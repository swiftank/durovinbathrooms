<?php
/**
 * Copyright © 2015 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */

// @codingStandardsIgnoreFile

/** @var $block \Magento\Catalog\Block\Product\View */
?>
<?php $_product = $block->getProduct(); ?>
<?php $_objectManager = \Magento\Framework\App\ObjectManager::getInstance(); ?>
<?php $category = $_objectManager->create('Magento\Catalog\Model\Category')->load($_product['category_id']); ?>

<?php 
$qtyIncrements = 1;
$dataValidate = $block->getQuantityValidators();
if(isset($dataValidate["validate-item-quantity"]["qtyIncrements"])){
    $qtyIncrements = $dataValidate["validate-item-quantity"]["qtyIncrements"];
}
?>
<?php $buttonTitle = __('Add to Cart'); ?>
<?php if ($_product->isSaleable()): ?>
<div class="box-tocart">
    <div class="fieldset">
        <?php if ($block->shouldRenderQuantity()): ?>
        <div class="field qty">
            <label class="label" for="qty"><span><?php /* @escapeNotVerified */ echo __('Qty') ?></span></label>
            <div class="control">
            	<div class="qty-minus"> <a class="btn-qty minus" href="#">-</a></div>
		<div class="qty-input">
                	<input type="number"
		               name="qty"
		               id="qty"
		               maxlength="12"
		               value="<?php /* @escapeNotVerified */ echo $block->getProductDefaultQty() * 1 ?>"
		               title="<?php /* @escapeNotVerified */ echo __('Qty') ?>" class="input-text qty"
		               data-validate="<?php echo $block->escapeHtml(json_encode($block->getQuantityValidators())) ?>"
		               />
                       </div>
		<div class="qty-plus"> <a class="btn-qty plus" href="#">+</a></div>
            </div>
        </div>
        <script type="text/javascript">
		require(['jquery','domReady!'],function($){
            var dataValidate = $('#qty').data('validate');
            var qtyIncrements = 1;
            if(dataValidate["validate-item-quantity"]["qtyIncrements"] != null){
                qtyIncrements = dataValidate["validate-item-quantity"]["qtyIncrements"]
            }
			$(".btn-qty").click(function (event) {
				var $button = $(this);
				var oldValue = $button.closest('.control').find("input#qty").val();
				var defaultValue = <?php /* @escapeNotVerified */ echo $block->getProductDefaultQty() * 1 ?>;
				if ($button.hasClass('plus')) {
					var newVal = parseFloat(oldValue) + qtyIncrements;
				} else {
					if (oldValue > defaultValue) {
					    var newVal = parseFloat(oldValue) - qtyIncrements;
					} else {
					    newVal = defaultValue;
					}
				}
				$button.closest('.control').find("input#qty").val(newVal);
				event.preventDefault();
			});

		});
        </script>
        <?php endif; ?>
        <div class="actions">
            <button type="submit"
                    title="<?php /* @escapeNotVerified */ echo $buttonTitle ?>"
                    class="action primary tocart"
                    id="product-addtocart-button">
                <span><?php /* @escapeNotVerified */ echo $buttonTitle ?></span>
            </button>
            <?php echo $block->getChildHtml('', true) ?>
        </div>
    </div>
</div>
<?php endif; ?>
<?php if ($block->isRedirectToCartEnabled()) : ?>
<script type="text/x-magento-init">
    {
        "#product_addtocart_form": {
            "Magento_Catalog/product/view/validation": {
                "radioCheckboxClosest": ".nested"
            }
        }
    }
</script>
<?php else : ?>
<script>
    require([
        'jquery',
        'mage/mage',
        'Magento_Catalog/product/view/validation',
        'Magento_Catalog/js/catalog-add-to-cart'
    ], function ($) {
        'use strict';

           
            // Getting categories from localstorage - events Related  
            var categories = JSON.parse(localStorage.getItem("categories"));
            categories =  categories === null ? [] : categories ;
            // Unique categories checking - events Related  
            
            /**
             * Google Analytics View Item Event for product view page
             *  Author: Ankush
             */
            gtag("event", "view_item", {
                        'value': parseFloat($('.price-final_price .price')[0].innerText.replace('£','')),
                        'currency': "GBP",
                        items: [{
                            'item_name': '<?php echo $_product['name']; ?>',
                            'item_id': '<?php echo $_product['sku']; ?>',
                            'item_list_id': '<?php echo strtolower(preg_replace('#[ -]+#', '_', $category->getName())) ; ?>',
                            'item_category': '<?php echo $category->getName(); ?>',
                            'item_list_name': '<?php echo $category->getName(); ?>',
                            'price': parseFloat($('.price-final_price .price')[0].innerText.replace('£','')),
                            'quantity': 1

                        }]

                });

        $('[id="product_addtocart_form"]').mage('validation', {
            radioCheckboxClosest: '.nested',
            submitHandler: function (form) {
                var widget = $(form).catalogAddToCart({
                    bindSubmit: false
                });

                widget.catalogAddToCart('submitForm', $(form));

                // Unique categories checking - events Related  
                var skku = '<?php echo $_product['sku']; ?>';
                var matched = categories.find(i => i.sku == skku );

                if(matched === undefined){
                    var newCategories = [...categories, {'sku' : '<?php echo $_product['sku']; ?>' ,'category_name': '<?php echo $category->getName(); ?>'}];
                    localStorage.setItem("categories", JSON.stringify(newCategories));
                }
                 // Unique categories checking - events Related  


                 /**
                 * Google Analytics Add to Cart Event for single product view page
                 *  Author: Ankush
                 */
                gtag("event", "add_to_cart", {
                    'value': parseFloat($('.price-final_price .price')[0].innerText.replace('£','')),
                    'currency': "GBP",
                    items: [{
                        'item_name': '<?php echo $_product['name']; ?>',
                        'item_id': '<?php echo $_product['sku']; ?>',
                        'item_list_id': '<?php echo strtolower(preg_replace('#[ -]+#', '_', $category->getName())) ; ?>',
                        'item_category': '<?php echo $category->getName(); ?>',
                        'item_list_name': '<?php echo $category->getName(); ?>',
                        'price': parseFloat($('.price-final_price .price')[0].innerText.replace('£','')),
                        'quantity': parseFloat($('#qty').val())
                     }]});
                return false;
            }
        });

    /**
     * Google Analytics Add to Cart Event for also bought section
     *  Author: Ankush
     */
    $('.newAddToCartRelated').each(function(index) {
        $(this).on("click", function(e) {
            e.preventDefault();
            /**
             * Google Analytics Add to Cart Event for related products in product details view
             *  Author: Ankush
             */
            gtag('event', 'add_to_cart', {
                'currency': "GBP",
                'value': parseFloat($(this).attr('data-pr-price')) ,
                'items': [{
                    'item_name': '' + $(this).attr(
                            'data-pr-name') +
                        '',
                    'price': parseFloat($(this).attr('data-pr-price')),
                    'item_list_id': '<?php echo strtolower(preg_replace('#[ -]+#', '_', $category->getName())) ; ?>',
                    'item_list_name': "<?php echo $category->getName(); ?>'",
                    'item_id': '' + $(this).attr('data-pr-sku') + '',
                    'quantity': 1,
                    'item_category': '<?php echo $category->getName(); ?>',
                    
                }]
            });

            // Unique categories checking - events Related  
            var skku = '<?php echo $_product['sku']; ?>';
            var matched = categories.find(i => i.sku == skku );

            if(matched === undefined){
                var newCategories = [...categories, {'sku' : '<?php echo $_product['sku']; ?>' ,'category_name': '<?php echo $category->getName(); ?>'}];
                localStorage.setItem("categories", JSON.stringify(newCategories));
            }
            // Unique categories checking - events Related

     		$(this).parents('form:first').submit();
            return false;
        });
    })
    });

</script>
<?php endif; ?>
